generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id           String        @id @default(uuid())
  name         String
  userName     String        @unique @map("user_name")
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  Member       Member[]
  Organization Organization?
  Schedule     Schedule[]

  @@map("clients")
}

model Schedule {
  id             String       @id @default(uuid())
  clientId       String       @map("client_id")
  organizationId String       @map("organization_id")
  date           DateTime
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  client         Client       @relation(fields: [clientId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@map("schedules")
}

model Member {
  id             String       @id @default(uuid())
  clientId       String       @map("client_id")
  organizationId String       @map("organization_id")
  role           Role         @default(MEMBER)
  member         Client       @relation(fields: [clientId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@map("members")
}

model Organization {
  id           String                       @id @default(uuid())
  clientId     String                       @unique @map("client_id")
  name         String
  description  String
  cnpj         String                       @unique
  street       String
  number       Int
  complement   String
  neighborhood String
  city         String
  state        String
  zip          String
  email        String                       @unique
  phone        String
  sector       String
  createdAt    DateTime                     @default(now()) @map("created_at")
  updatedAt    DateTime                     @updatedAt @map("updated_at")
  Member       Member[]
  Available    OrganizationAvailableTimes[]
  ownerId      Client                       @relation(fields: [clientId], references: [id])
  Schedule     Schedule[]

  @@map("organizations")
}

model OrganizationAvailableTimes {
  id                 String       @id @default(uuid())
  weekDay            Int          @map("week_day")
  startTimeInMinutes Int          @map("start_time_in_minutes")
  endTimeInMinutes   Int          @map("end_time_in_minutes")
  organizationId     String       @map("organization_id")
  organization       Organization @relation(fields: [organizationId], references: [id])

  @@index([organizationId])
  @@map("organization_available_times")
}

enum Role {
  ADMIN
  EMPLOYEE
  MEMBER
}
